{"version":3,"sources":["images/header__logo.svg","contexts/AppContext.js","components/NavBar.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","images/preloaders/preloaderCards.gif","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","utils/utils.js","utils/api.js","images/profile__avatar.svg","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","images/success.svg","images/error.svg","utils/constants.js","components/App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","NavBar","isNavOpened","onClickNav","value","useContext","loggedIn","className","to","activeClassName","type","onClick","userEmail","signOut","Header","src","logo","alt","CurrentUserContext","Card","props","currentUser","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","link","name","onCardClick","onCardLike","length","Main","cards","isLoadingCards","isLoadingUserInfo","onEditAvatar","onEditProfile","onAddPlace","avatar","about","preloaderCards","map","Footer","PopupWithForm","isOpened","e","target","classList","contains","onClose","action","onSubmit","noValidate","statusImage","title","children","EditProfilePopup","isOpen","onUpdateUser","isLoadingButtonText","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","onChange","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","inputAvatar","useRef","current","ref","AddPlacePopup","setLink","ConfirmationPopup","ImagePopup","handleOriginalResponse","res","ok","json","Promise","reject","status","api","options","this","baseUrl","headers","fetch","then","userInfo","method","body","JSON","stringify","cardInfo","cardId","setLike","avatarLink","authorization","auth","register","password","email","data","catch","err","console","log","authorize","token","localStorage","setItem","getContent","Login","handleLogin","userData","setUserData","handleChange","Register","handleRegister","ProtectedRoute","Component","component","InfoTooltip","statusMessage","statusSuccessMessage","statusErrors","errors","message","App","history","useHistory","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","avatarDefault","setCurrentUser","setCards","setLoggedIn","image","statusSuccessImage","infoTooltip","setInfoTooltip","setIsNavOpened","setUserEmail","setIsLoadingCards","setIsLoadingUserInfo","setIsLoadingButtonText","closeAllPopups","push","handleError","form","statusError","statusErrorMessage","filter","error","statusErrorImage","getItem","tokenCheck","getInitialCards","initialCards","handleEscClose","key","document","addEventListener","removeEventListener","getUserInfo","Provider","removeItem","path","exact","changeLikeCardStatus","newCard","newCards","c","editProfile","addCard","deleteCard","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1188608d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo.047d20f8.svg\";","import React from 'react';\r\n\r\nexport const AppContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nfunction NavBar({ isNavOpened, onClickNav }) {\r\n  const value = useContext(AppContext);\r\n  function handleClick() {\r\n    onClickNav(!isNavOpened);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Меню неавторизованный пользователь */}\r\n      {!value.loggedIn &&\r\n        <nav className=\"nav\">\r\n          <ul className=\"nav__list\">\r\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"./sign-in\" activeClassName=\"nav__link_active\">Войти</NavLink></li>\r\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"./sign-up\" activeClassName=\"nav__link_active\">Регистрация</NavLink></li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n      {/* Меню авторизованный пользователь */}\r\n      {value.loggedIn &&\r\n        <nav className=\"nav\">\r\n          <button type=\"button\" className={`button button_type_open-nav ${isNavOpened && 'button_type_close-nav'}`} onClick={handleClick}></button>\r\n          <ul className=\"nav__list nav__list_authorized\">\r\n            <li className=\"nav__item nav__item_margin_right\">{value.userEmail}</li>\r\n            <li className=\"nav__item\"><button type=\"button\" className=\"button button_type_logout\" onClick={value.signOut}>Выйти</button></li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n      {/* Меню мобильная версия */}\r\n      {value.loggedIn &&\r\n        <nav className={`nav nav_type_mobile ${isNavOpened && 'nav_opened'}`}>\r\n          <ul className=\"nav__list nav__list_type_mobile\">\r\n            <li className=\"nav__item nav__item_type_mobile\">{value.userEmail}</li>\r\n            <li className=\"nav__item\"><button type=\"button\" className=\"button button_type_logout\" onClick={value.signOut}>Выйти</button></li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport logo from './../images/header__logo.svg';\r\nimport NavBar from './NavBar';\r\n\r\nfunction Header({ isNavOpened, onClickNav }) {\r\n\r\n  return (\r\n    <header className={`header ${isNavOpened && 'header_margin_top'}`}>\r\n      <img src={logo} alt=\"Место в России\" className=\"header__logo\" />\r\n      <NavBar\r\n        onClickNav={onClickNav}\r\n        isNavOpened={isNavOpened}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `button ${isOwn ? 'button_type_remove-card' : 'button_type_remove-card-hidden'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `button ${isLiked ? 'button_type_add-like-active' : 'button_type_add-like'}`\r\n  );\r\n\r\n  function handleImageClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n      <img src={props.card.link} alt={props.card.name} className=\"card__image\" onClick={handleImageClick} />\r\n      <div className=\"card__info\">\r\n        <h2 className=\"card__name\">{props.card.name}</h2>\r\n        <div className=\"card__like\">\r\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n          <span className=\"card__like-count\">{props.card.likes.length ? props.card.likes.length : ''}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/preloaderCards.a9c8a65c.gif\";","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport preloaderCards from './../images/preloaders/preloaderCards.gif';\r\n\r\nfunction Main({ cards, isLoadingCards, isLoadingUserInfo, onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__about\">\r\n          <div className=\"profile__avatar\" onClick={onEditAvatar}>\r\n            <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__avatar-img\" />\r\n          </div>\r\n          <div className=\"profile__description\">\r\n            <div className={`preloader preloader_type_text preloader_type_text-long ${!isLoadingUserInfo && 'preloader_hidden'}`}></div>\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button type=\"button\" className=\"button button_type_edit-profile\" onClick={onEditProfile}></button>\r\n            <div className={`preloader preloader_type_text preloader_type_text-short ${!isLoadingUserInfo && 'preloader_hidden'}`}></div>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" className=\"button button_type_add-card\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        <img src={preloaderCards} alt=\"Загрузка\" className={`preloader preloader_type_image ${!isLoadingCards && 'preloader_hidden'}`} />\r\n        <ul className=\"cards\">\r\n          {cards.map(card => (\r\n            <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&#169; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup ${props.isOpened && 'popup_opened'} popup_type_${props.name}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}></button>\r\n        <form action=\"#\" name={`${props.name}`} className=\"form\" onSubmit={props.onSubmit} noValidate>\r\n          {props.statusImage && <img src={props.statusImage} alt=\"Статус запроса\" className=\"popup__image popup__image_type_status\" />}\r\n          <h2 className={`popup__heading`}>{props.title}</h2>\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoadingButtonText }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] = useState(currentUser.name);\r\n  const [description, setDescription] = useState(currentUser.about);\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"name\"\r\n          id=\"profile-name-input\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          placeholder=\"Имя\"\r\n          className=\"form__input form__input_el_profile-name\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error profile-name-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"description\"\r\n          id=\"profile-job-input\"\r\n          value={description}\r\n          onChange={handleChangeDescription}\r\n          placeholder=\"Вид деятельности\"\r\n          className=\"form__input form__input_el_profile-job\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error profile-job-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Cохранение...' : 'Сохранить'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoadingButtonText }) {\r\n  const inputAvatar = useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: inputAvatar.current.value\r\n    });\r\n    inputAvatar.current.value = '';\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"url\"\r\n          name=\"avatar-link\"\r\n          id=\"avatar-link-input\"\r\n          ref={inputAvatar}\r\n          className=\"form__input form__input_size_small form__input_el_avatar-link\"\r\n          placeholder=\"Ссылка на аватар\"\r\n          required\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error avatar-link-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Сохранить'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoadingButtonText }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleCardNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleCardLinkChange(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link\r\n    });\r\n    setName('');\r\n    setLink('');\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"add-card\"\r\n      title=\"Новое место\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"card-name\"\r\n          id=\"card-name-input\"\r\n          value={name}\r\n          onChange={handleCardNameChange}\r\n          className=\"form__input form__input_size_small form__input_el_card-name\"\r\n          placeholder=\"Название\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error card-name-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input type=\"url\"\r\n          name=\"card-link\"\r\n          id=\"card-link-input\"\r\n          value={link}\r\n          onChange={handleCardLinkChange}\r\n          className=\"form__input form__input_size_small form__input_el_card-link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error card-link-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Создать'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmationPopup({ card, isOpen, onClose, onCardDelete, isLoadingButtonText }) {\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onCardDelete(card._id);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"delete-card\"\r\n      title=\"Вы уверены?\"\r\n    >\r\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Удаление...' : 'Да'}</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default ConfirmationPopup;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_show-card ${props.card && 'popup_opened'}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\r\n        <div className=\"popup__container popup__container_size_large\">\r\n          <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}></button>\r\n          <figure className=\"popup__figure\">\r\n            <img src={props.card && props.card.link} alt={props.card && props.card.name} className=\"popup__image\" />\r\n            <figcaption className=\"popup__caption\">{props.card && props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","const handleOriginalResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(res.status);\r\n}\r\n\r\nexport default handleOriginalResponse;","import handleOriginalResponse from './utils.js';\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: this.headers\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards/`, {\r\n      headers: this.headers\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  editProfile(userInfo) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: userInfo.name,\r\n        about: userInfo.about\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  addCard(cardInfo) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: cardInfo.name,\r\n        link: cardInfo.link\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers,\r\n    })\r\n      .then(handleOriginalResponse);\r\n    ;\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, setLike) {\r\n    if (setLike) {\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this.headers,\r\n      })\r\n        .then(handleOriginalResponse);\r\n    } else {\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers,\r\n      })\r\n        .then(handleOriginalResponse);\r\n    }\r\n  }\r\n\r\n  updateAvatar(avatarLink) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarLink\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n  headers: {\r\n    authorization: 'c965dbbc-afa4-4385-8eef-dcc49737a825',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nclass Auth {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n  }\r\n\r\n  register = (password, email) => {\r\n    return fetch(`${this.baseUrl}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n      .then(handleOriginalResponse)\r\n      .then(data => {\r\n        if (data) {\r\n          return data;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return err;\r\n      });\r\n  }\r\n\r\n  authorize = (password, email) => {\r\n    return fetch(`${this.baseUrl}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n      .then(handleOriginalResponse)\r\n      .then(data => {\r\n        if (data.token) {\r\n          localStorage.setItem('token', data.token);\r\n          return data;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return err;\r\n      });\r\n  }\r\n\r\n  getContent = (token) => {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Authorization\": `Bearer ${token}`\r\n      },\r\n    })\r\n      .then(handleOriginalResponse)\r\n      .then(data => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return err;\r\n      });\r\n  }\r\n}\r\n\r\nexport const auth = new Auth({\r\n  baseUrl: 'https://auth.nomoreparties.co',\r\n})","export default __webpack_public_path__ + \"static/media/profile__avatar.64512549.svg\";","import React, { useState } from 'react';\r\n\r\nfunction Login({ handleLogin }) {\r\n  const [userData, setUserData] = useState({\r\n    password: '',\r\n    email: ''\r\n  })\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const { password, email } = userData;\r\n    if (!password || !email) {\r\n      return;\r\n    }\r\n    handleLogin(evt, password, email);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sign\">\r\n        <p className=\"sign__heading\">Вход</p>\r\n        <form\r\n          name=\"login-form\"\r\n          className=\"sign__form\"\r\n          onSubmit={handleSubmit}>\r\n          <fieldset className=\"sign__fieldset\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={userData.email}\r\n              className=\"sign__input\"\r\n              onChange={handleChange}\r\n              placeholder=\"Email\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={userData.password}\r\n              className=\"sign__input\"\r\n              onChange={handleChange}\r\n              placeholder=\"Пароль\"\r\n            />\r\n          </fieldset>\r\n          <button type=\"submit\" className=\"sign__button\">Войти</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register({ handleRegister }) {\r\n  const [userData, setUserData] = useState({\r\n    password: '',\r\n    email: ''\r\n  });\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const { password, email } = userData;\r\n    handleRegister(evt, password, email);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sign\">\r\n        <p className=\"sign__heading\">Регистрация</p>\r\n        <form\r\n          name=\"register-form\"\r\n          className=\"sign__form\"\r\n          onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={userData.email}\r\n            className=\"sign__input\"\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={userData.password}\r\n            className=\"sign__input\"\r\n            onChange={handleChange}\r\n            placeholder=\"Пароль\"\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"sign__button\">Зарегистрироваться</button>\r\n        </form>\r\n        <div className=\"sign__signin\">\r\n          <span>Уже зарегистрированы?</span>\r\n          <Link to=\"./sign-in\" className=\"sign__link\">Войти</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  const value = useContext(AppContext);\r\n  return (\r\n    <Route>\r\n      {\r\n        value.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction InfoTooltip({ isOpen, onClose, statusImage, statusMessage }) {\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      name=\"sign-status\"\r\n      statusImage={statusImage}\r\n      title={statusMessage}\r\n    >\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","export default __webpack_public_path__ + \"static/media/success.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/error.d4ce2a26.svg\";","export const statusSuccessMessage = 'Вы успешно зарегистрировались!';\r\nexport const statusErrorText = 'Что-то пошло не так! Попробуйте еще раз.';\r\n\r\nexport const statusErrors = [\r\n  {\r\n    name: 'login-form',\r\n    errors: [\r\n      {\r\n        status: 400,\r\n        message: 'Не передано одно из полей.'\r\n      },\r\n      {\r\n        status: 401,\r\n        message: 'Пользователь не найден. Проверьте Email и Пароль.'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'register-form',\r\n    errors: [\r\n      {\r\n        status: 400,\r\n        message: 'Некорректно заполнено одно из полей. Попробуйте еще раз.'\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { api, auth } from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport avatarDefault from './../images/profile__avatar.svg';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport statusSuccessImage from './../images/success.svg';\r\nimport statusErrorImage from './../images/error.svg';\r\nimport { statusErrors, statusSuccessMessage } from './../utils/constants';\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);                       // Стейт попап редактирования профиля открыт\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);                             // Стейт попап добавить карточку открыт\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);                         // Стейт попап редактирования аватара открыт\r\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);                     // Стейт попап подтверждения удаления карточки открыт\r\n  const [selectedCard, setSelectedCard] = useState(null);                                            // Стейт выбранная карточка для передачи картинки карточки в попап\r\n  const [deletedCard, setDeletedCard] = useState(null);                                              // Стейт выбранная карточка для удаления\r\n  const [currentUser, setCurrentUser] = useState({                                                   // Стейт данные текущего пользователя\r\n    name: '',\r\n    about: '',\r\n    email: '',\r\n    avatar: avatarDefault\r\n  });\r\n  const [cards, setCards] = useState([]);                                                            // Стейт массив карточек\r\n  const [loggedIn, setLoggedIn] = useState(false);                                                   // Стейт-переменная статус пользователя, вход в систему\r\n  const [infoTooltip, setInfoTooltip] = useState({                                                   // Стейт информационного попапа статуса\r\n    isOpen: false,\r\n    image: statusSuccessImage,\r\n    message: statusSuccessMessage\r\n  });\r\n  const [isNavOpened, setIsNavOpened] = useState(false);                                             // Стейт мобильная навигация открыта\r\n  const [userEmail, setUserEmail] = useState('');                                                    // Стейт email пользователя\r\n  const [isLoadingCards, setIsLoadingCards] = useState(true);                                        // Стейт прелоадер загрузки карточек\r\n  const [isLoadingUserInfo, setIsLoadingUserInfo] = useState(true);                                  // Стейт прелоадер загрузки информации пользователя\r\n  const [isLoadingButtonText, setIsLoadingButtonText] = useState(false);                             // Стейт надпись на кнопке при сохранении контента\r\n\r\n  // Обработчик клика по аватару\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке редактирования профиля\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке добавить карточку\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке удалить карточку\r\n  function handleCardDelete(card) {\r\n    setIsConfirmationPopupOpen(true);\r\n    setDeletedCard(card);\r\n  }\r\n\r\n  // Функция закрытия всех попапов\r\n  function closeAllPopups() {\r\n    setInfoTooltip({\r\n      ...infoTooltip,\r\n      isOpen: false\r\n    });\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsConfirmationPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  // Обработчик клика по картинке карточки\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  // Обработчик обновления информации пользователя\r\n  function handleUpdateUser(userInfo) {\r\n    setIsLoadingButtonText(true);\r\n    api.editProfile(userInfo)\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик обновления аватара\r\n  function handleUpdateAvatar({ avatar }) {\r\n    setIsLoadingButtonText(true);\r\n    api.updateAvatar(avatar)\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик лайка картинки\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then(newCard => {\r\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик подтверждения удаления карточки\r\n  function handleCardDeleteSubmit(cardId) {\r\n    setIsLoadingButtonText(true);\r\n    api.deleteCard(cardId)\r\n      .then(() => {\r\n        const newCards = cards.filter(c => c._id !== cardId);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик добавления карточки\r\n  function handleAddPlaceSubmit(cardInfo) {\r\n    setIsLoadingButtonText(true);\r\n    api.addCard(cardInfo)\r\n      .then(newCard => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n        setIsLoadingButtonText(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик по кнопке Войти\r\n  function handleLogin(evt, password, email) {\r\n    auth.authorize(password, email)\r\n      .then(data => {\r\n        if (data.token) {\r\n          setLoggedIn(true);\r\n          setUserEmail(email);\r\n          history.push('/');\r\n        } else {\r\n          handleError(evt.target, data);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));                                          // По указанным Логину и Паролю пользователь не найден. Проверьте введенные данные и повторите попытку. \r\n  }\r\n\r\n  // Обработчик по кнопке Зарегистрироваться\r\n  function handleRegister(evt, password, email) {\r\n    auth.register(password, email)\r\n      .then(res => {\r\n        if (res !== 400) {\r\n          setInfoTooltip({\r\n            ...infoTooltip,\r\n            isOpen: true,\r\n            image: statusSuccessImage,\r\n            message: statusSuccessMessage\r\n          });\r\n          history.push('./sign-in');\r\n        } else {\r\n          handleError(evt.target, res);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));                                                                // Обработка ошибки handleError();\r\n  }\r\n\r\n  // Обработчик ошибки по кнопке Войти\r\n  function handleError(form, statusError) {\r\n    const errors = statusErrors.filter(error => error.name === form.name)[0].errors;\r\n    const statusErrorMessage = errors.filter(error => error.status === statusError)[0].message;\r\n    setInfoTooltip({\r\n      ...infoTooltip,\r\n      isOpen: true,\r\n      image: statusErrorImage,\r\n      message: statusErrorMessage\r\n    });\r\n  }\r\n\r\n  // Обработчик клика по меню\r\n  function handleNavClick() {\r\n    setIsNavOpened(!isNavOpened);\r\n  }\r\n\r\n  // Выход из аккаунта\r\n  function signOut() {\r\n    setLoggedIn(false);\r\n    setIsNavOpened(false);\r\n    localStorage.removeItem('token');\r\n    history.push('./sign-in');\r\n  }\r\n\r\n  // Проверка токена при повторном посещении сайта\r\n  function tokenCheck() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      auth.getContent(token)\r\n        .then(res => {\r\n          if (res) {\r\n            setUserEmail(res.data.email);\r\n            setLoggedIn(true);\r\n            history.push('/');\r\n          }\r\n        })\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  // Загрузка карточек по умолчанию\r\n  useEffect(() => {\r\n    api.getInitialCards()\r\n      .then(initialCards => {\r\n        setCards(initialCards);\r\n        setIsLoadingCards(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  // Добавить/удалить слушателя нажатия Esc при открытии попапа\r\n  useEffect(() => {\r\n    function handleEscClose(evt) {\r\n      if (evt.key === 'Escape') {\r\n        closeAllPopups();\r\n      };\r\n    }\r\n\r\n    (isEditProfilePopupOpen\r\n      || infoTooltip.isOpen\r\n      || isAddPlacePopupOpen\r\n      || isEditAvatarPopupOpen\r\n      || isConfirmationPopupOpen\r\n      || selectedCard) && document.addEventListener('keydown', handleEscClose);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [infoTooltip.isOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isConfirmationPopupOpen, selectedCard, closeAllPopups]);\r\n\r\n  // Загрузка данных пользователя\r\n  useEffect(() => {\r\n    api.getUserInfo()\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        setIsLoadingUserInfo(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ loggedIn, userEmail, handleLogin, signOut }}>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"page__container\">\r\n          <Header\r\n            isNavOpened={isNavOpened}\r\n            onClickNav={handleNavClick}\r\n          />\r\n          <Switch>\r\n            <Route path=\"/sign-up\">\r\n              <Register\r\n                handleRegister={handleRegister}\r\n                handleError={handleError}\r\n              />\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              <Login\r\n                handleLogin={handleLogin}\r\n                handleError={handleError}\r\n              />\r\n            </Route>\r\n            <ProtectedRoute\r\n              exact path=\"/\"\r\n              component={Main}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n              cards={cards}\r\n              isLoadingCards={isLoadingCards}\r\n              isLoadingUserInfo={isLoadingUserInfo}\r\n            >\r\n            </ProtectedRoute>\r\n            <Route path=\"/\">\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n          </Switch>\r\n          {loggedIn && <Footer />}\r\n          {/* <!-- Попап редактировать профиль --> */}\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n            isLoadingButtonText={isLoadingButtonText}\r\n          />\r\n          {/* <!-- Попап добавить карточку --> */}\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n            isLoadingButtonText={isLoadingButtonText}\r\n          />\r\n          {/* <!-- Попап картинка --> */}\r\n          <ImagePopup\r\n            onClose={closeAllPopups}\r\n            card={selectedCard}\r\n          />\r\n          {/* <!-- Попап удаления карточки --> */}\r\n          <ConfirmationPopup\r\n            isOpen={isConfirmationPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onCardDelete={handleCardDeleteSubmit}\r\n            card={deletedCard}\r\n            isLoadingButtonText={isLoadingButtonText}\r\n          />\r\n\r\n          {/* <!-- Попап обновить аватар --> */}\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n            isLoadingButtonText={isLoadingButtonText}\r\n          />\r\n\r\n          {/* <!-- Попап статус подтверждение --> */}\r\n          <InfoTooltip\r\n            isOpen={infoTooltip.isOpen}\r\n            onClose={closeAllPopups}\r\n            statusImage={infoTooltip.image}\r\n            statusMessage={infoTooltip.message}\r\n          />\r\n        </div>\r\n      </CurrentUserContext.Provider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}