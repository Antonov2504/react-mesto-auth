{"version":3,"sources":["images/header__logo.svg","contexts/AppContext.js","components/NavBar.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","utils/utils.js","utils/api.js","images/profile__avatar.svg","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","images/success.svg","images/error.svg","utils/constants.js","components/App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","NavBar","isNavOpened","onClickNav","value","useContext","loggedIn","className","to","activeClassName","type","onClick","userEmail","signOut","Header","src","logo","alt","CurrentUserContext","Card","props","currentUser","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","link","name","onCardClick","onCardLike","length","Main","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","Footer","PopupWithForm","isOpened","e","target","classList","contains","onClose","action","onSubmit","noValidate","statusImage","title","children","EditProfilePopup","useState","setName","description","setDescription","useEffect","isOpen","evt","preventDefault","onUpdateUser","id","onChange","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","inputAvatar","useRef","current","ref","AddPlacePopup","setLink","ConfirmationPopup","ImagePopup","handleOriginalResponse","res","ok","json","Promise","reject","status","api","options","this","baseUrl","headers","fetch","then","userInfo","method","body","JSON","stringify","cardInfo","cardId","setLike","avatarLink","authorization","auth","register","password","email","data","catch","err","console","log","authorize","token","localStorage","setItem","getContent","Login","handleLogin","handleError","history","useHistory","userData","setUserData","handleChange","push","Register","handleRegister","ProtectedRoute","Component","component","InfoTooltip","statusMessage","statusSuccessMessage","statusErrors","errors","message","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","avatarDefault","setCurrentUser","setCards","setLoggedIn","image","statusSuccessImage","infoTooltip","setInfoTooltip","setIsNavOpened","setUserEmail","closeAllPopups","form","statusError","statusErrorMessage","filter","error","statusErrorImage","getItem","tokenCheck","getInitialCards","initialCards","handleEscClose","key","document","addEventListener","removeEventListener","getUserInfo","Provider","removeItem","path","exact","changeLikeCardStatus","newCard","newCards","c","editProfile","addCard","deleteCard","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.302626cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo.047d20f8.svg\";","import React from 'react';\r\n\r\nexport const AppContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nfunction NavBar({ isNavOpened, onClickNav }) {\r\n  const value = useContext(AppContext);\r\n  function handleClick() {\r\n    onClickNav(!isNavOpened);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Меню неавторизованный пользователь */}\r\n      {!value.loggedIn &&\r\n        <nav className=\"nav\">\r\n          <ul className=\"nav__list\">\r\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"./sign-in\" activeClassName=\"nav__link_active\">Войти</NavLink></li>\r\n            <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"./sign-up\" activeClassName=\"nav__link_active\">Регистрация</NavLink></li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n      {/* Меню авторизованный пользователь */}\r\n      {value.loggedIn &&\r\n        <nav className=\"nav\">\r\n          <button type=\"button\" className={`button button_type_open-nav ${isNavOpened && 'button_type_close-nav'}`} onClick={handleClick}></button>\r\n          <ul className=\"nav__list nav__list_authorized\">\r\n            <li className=\"nav__item nav__item_margin_right\">{value.userEmail}</li>\r\n            <li className=\"nav__item\"><button type=\"button\" className=\"button button_type_logout\" onClick={value.signOut}>Выйти</button></li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n      {/* Меню мобильная версия */}\r\n      {value.loggedIn &&\r\n        <nav className={`nav nav_type_mobile ${isNavOpened && 'nav_opened'}`}>\r\n          <ul className=\"nav__list nav__list_type_mobile\">\r\n            <li className=\"nav__item nav__item_type_mobile\">{value.userEmail}</li>\r\n            <li className=\"nav__item\"><button type=\"button\" className=\"button button_type_logout\" onClick={value.signOut}>Выйти</button></li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport logo from './../images/header__logo.svg';\r\nimport NavBar from './NavBar';\r\n\r\nfunction Header({ isNavOpened, onClickNav }) {\r\n\r\n  return (\r\n    <header className={`header ${isNavOpened && 'header_margin_top'}`}>\r\n      <img src={logo} alt=\"Место в России\" className=\"header__logo\" />\r\n      <NavBar\r\n        onClickNav={onClickNav}\r\n        isNavOpened={isNavOpened}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `button ${isOwn ? 'button_type_remove-card' : 'button_type_remove-card-hidden'}`\r\n  );\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `button ${isLiked ? 'button_type_add-like-active' : 'button_type_add-like'}`\r\n  );\r\n\r\n  function handleImageClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n      <img src={props.card.link} alt={props.card.name} className=\"card__image\" onClick={handleImageClick} />\r\n      <div className=\"card__info\">\r\n        <h2 className=\"card__name\">{props.card.name}</h2>\r\n        <div className=\"card__like\">\r\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n          <span className=\"card__like-count\">{props.card.likes.length ? props.card.likes.length : ''}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ cards, onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__about\">\r\n          <div className=\"profile__avatar\" onClick={onEditAvatar}>\r\n            <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__avatar-img\" />\r\n          </div>\r\n          <div className=\"profile__description\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button type=\"button\" className=\"button button_type_edit-profile\" onClick={onEditProfile}></button>\r\n            <p className=\"profile__job\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" className=\"button button_type_add-card\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        <ul className=\"cards\">\r\n          {cards.map(card => (\r\n            <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__text\">&#169; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup ${props.isOpened && 'popup_opened'} popup_type_${props.name}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}></button>\r\n        <form action=\"#\" name={`${props.name}`} className=\"form\" onSubmit={props.onSubmit} noValidate>\r\n          {props.statusImage && <img src={props.statusImage} alt=\"Статус запроса\" className=\"popup__image popup__image_type_status\" />}\r\n          <h2 className={`popup__heading`}>{props.title}</h2>\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] = useState(currentUser.name);\r\n  const [description, setDescription] = useState(currentUser.about);\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(evt) {\r\n    setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"name\"\r\n          id=\"profile-name-input\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          placeholder=\"Имя\"\r\n          className=\"form__input form__input_el_profile-name\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error profile-name-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"description\"\r\n          id=\"profile-job-input\"\r\n          value={description}\r\n          onChange={handleChangeDescription}\r\n          placeholder=\"Вид деятельности\"\r\n          className=\"form__input form__input_el_profile-job\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error profile-job-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">Сохранить</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const inputAvatar = useRef();\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: inputAvatar.current.value\r\n    });\r\n    inputAvatar.current.value = '';\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"url\"\r\n          name=\"avatar-link\"\r\n          id=\"avatar-link-input\"\r\n          ref={inputAvatar}\r\n          className=\"form__input form__input_size_small form__input_el_avatar-link\"\r\n          placeholder=\"Ссылка на аватар\"\r\n          required\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error avatar-link-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">Сохранить</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleCardNameChange(evt) {\r\n    setName(evt.target.value);\r\n  }\r\n\r\n  function handleCardLinkChange(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link\r\n    });\r\n    setName('');\r\n    setLink('');\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"add-card\"\r\n      title=\"Новое место\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input type=\"text\"\r\n          name=\"card-name\"\r\n          id=\"card-name-input\"\r\n          value={name}\r\n          onChange={handleCardNameChange}\r\n          className=\"form__input form__input_size_small form__input_el_card-name\"\r\n          placeholder=\"Название\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error card-name-input-error\"></span>\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input type=\"url\"\r\n          name=\"card-link\"\r\n          id=\"card-link-input\"\r\n          value={link}\r\n          onChange={handleCardLinkChange}\r\n          className=\"form__input form__input_size_small form__input_el_card-link\"\r\n          placeholder=\"Ссылка на картинку\"\r\n          required\r\n          autoComplete=\"off\" />\r\n        <span className=\"form__input-error card-link-input-error\"></span>\r\n      </label>\r\n      <button type=\"submit\" className=\"button button_type_submit\">Создать</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmationPopup({ card, isOpen, onClose, onCardDelete }) {\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onCardDelete(card._id);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"delete-card\"\r\n      title=\"Вы уверены?\"\r\n    >\r\n      <button type=\"submit\" className=\"button button_type_submit\">Да</button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default ConfirmationPopup;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_show-card ${props.card && 'popup_opened'}`} onClick={(e) => { if (e.target.classList.contains('popup')) props.onClose() }}>\r\n        <div className=\"popup__container popup__container_size_large\">\r\n          <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}></button>\r\n          <figure className=\"popup__figure\">\r\n            <img src={props.card && props.card.link} alt={props.card && props.card.name} className=\"popup__image\" />\r\n            <figcaption className=\"popup__caption\">{props.card && props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","const handleOriginalResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(res.status);\r\n}\r\n\r\nexport default handleOriginalResponse;","import handleOriginalResponse from './utils.js';\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: this.headers\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards/`, {\r\n      headers: this.headers\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  editProfile(userInfo) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: userInfo.name,\r\n        about: userInfo.about\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  addCard(cardInfo) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: cardInfo.name,\r\n        link: cardInfo.link\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers,\r\n    })\r\n      .then(handleOriginalResponse);\r\n    ;\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, setLike) {\r\n    if (setLike) {\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this.headers,\r\n      })\r\n        .then(handleOriginalResponse);\r\n    } else {\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers,\r\n      })\r\n        .then(handleOriginalResponse);\r\n    }\r\n  }\r\n\r\n  updateAvatar(avatarLink) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarLink\r\n      })\r\n    })\r\n      .then(handleOriginalResponse);\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n  headers: {\r\n    authorization: 'c965dbbc-afa4-4385-8eef-dcc49737a825',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nclass Auth {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n  }\r\n\r\n  register = (password, email) => {\r\n    return fetch(`${this.baseUrl}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n      .then(handleOriginalResponse)\r\n      .then(data => {\r\n        if (data) {\r\n          return data;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return err;\r\n      });\r\n  }\r\n\r\n  authorize = (password, email) => {\r\n    return fetch(`${this.baseUrl}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n      .then(handleOriginalResponse)\r\n      .then(data => {\r\n        if (data.token) {\r\n          localStorage.setItem('token', data.token);\r\n          return data;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return err;\r\n      });\r\n  }\r\n\r\n  getContent = (token) => {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Authorization\": `Bearer ${token}`\r\n      },\r\n    })\r\n      .then(handleOriginalResponse)\r\n      .then(data => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return err;\r\n      });\r\n  }\r\n}\r\n\r\nexport const auth = new Auth({\r\n  baseUrl: 'https://auth.nomoreparties.co',\r\n})","export default __webpack_public_path__ + \"static/media/profile__avatar.64512549.svg\";","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from './../utils/api';\r\n\r\nfunction Login({ handleLogin, handleError }) {\r\n  const history = useHistory();\r\n  const [userData, setUserData] = useState({\r\n    password: '',\r\n    email: ''\r\n  })\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const { password, email } = userData;\r\n    if (!password || !email) {\r\n      return;\r\n    }\r\n    auth.authorize(password, email)\r\n      .then(data => {\r\n        if (data.token) {\r\n          handleLogin(email);\r\n          history.push('/');\r\n        } else {\r\n          handleError(evt.target, data);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));                                          // По указанным Логину и Паролю пользователь не найден. Проверьте введенные данные и повторите попытку. \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sign\">\r\n        <p className=\"sign__heading\">Вход</p>\r\n        <form\r\n          name=\"login-form\"\r\n          className=\"sign__form\"\r\n          onSubmit={handleSubmit}>\r\n          <fieldset className=\"sign__fieldset\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={userData.email}\r\n              className=\"sign__input\"\r\n              onChange={handleChange}\r\n              placeholder=\"Email\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={userData.password}\r\n              className=\"sign__input\"\r\n              onChange={handleChange}\r\n              placeholder=\"Пароль\"\r\n            />\r\n          </fieldset>\r\n          <button type=\"submit\" className=\"sign__button\">Войти</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './../utils/api';\r\n\r\nfunction Register({ handleRegister, handleError }) {\r\n  const history = useHistory();\r\n  const [userData, setUserData] = useState({\r\n    password: '',\r\n    email: ''\r\n  });\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const { password, email } = userData;\r\n    auth.register(password, email)\r\n      .then(res => {\r\n        if (res !== 400) {\r\n          handleRegister();\r\n          history.push('./sign-in');\r\n        } else {\r\n          handleError(evt.target, res);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));                                                                // Обработка ошибки handleError();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sign\">\r\n        <p className=\"sign__heading\">Регистрация</p>\r\n        <form\r\n          name=\"register-form\"\r\n          className=\"sign__form\"\r\n          onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={userData.email}\r\n            className=\"sign__input\"\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={userData.password}\r\n            className=\"sign__input\"\r\n            onChange={handleChange}\r\n            placeholder=\"Пароль\"\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"sign__button\">Зарегистрироваться</button>\r\n        </form>\r\n        <div className=\"sign__signin\">\r\n          <span>Уже зарегистрированы?</span>\r\n          <Link to=\"./sign-in\" className=\"sign__link\">Войти</Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  const value = useContext(AppContext);\r\n  return (\r\n    <Route>\r\n      {\r\n        value.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction InfoTooltip({ isOpen, onClose, statusImage, statusMessage }) {\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      name=\"sign-status\"\r\n      statusImage={statusImage}\r\n      title={statusMessage}\r\n    >\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","export default __webpack_public_path__ + \"static/media/success.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/error.d4ce2a26.svg\";","export const statusSuccessMessage = 'Вы успешно зарегистрировались!';\r\nexport const statusErrorText = 'Что-то пошло не так! Попробуйте еще раз.';\r\n\r\nexport const statusErrors = [\r\n  {\r\n    name: 'login-form',\r\n    errors: [\r\n      {\r\n        status: 400,\r\n        message: 'Не передано одно из полей.'\r\n      },\r\n      {\r\n        status: 401,\r\n        message: 'Пользователь не найден. Проверьте Email и Пароль.'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'register-form',\r\n    errors: [\r\n      {\r\n        status: 400,\r\n        message: 'Некорректно заполнено одно из полей. Попробуйте еще раз.'\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmationPopup from './ConfirmationPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { api, auth } from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport avatarDefault from './../images/profile__avatar.svg';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport statusSuccessImage from './../images/success.svg';\r\nimport statusErrorImage from './../images/error.svg';\r\nimport { statusErrors, statusSuccessMessage } from './../utils/constants';\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);                       // Стейт попап редактирования профиля открыт\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);                             // Стейт попап добавить карточку открыт\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);                         // Стейт попап редактирования аватара открыт\r\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);                     // Стейт попап подтверждения удаления карточки открыт\r\n  const [selectedCard, setSelectedCard] = useState(null);                                            // Стейт выбранная карточка для передачи картинки карточки в попап\r\n  const [deletedCard, setDeletedCard] = useState(null);                                              // Стейт выбранная карточка для удаления\r\n  const [currentUser, setCurrentUser] = useState({                                                   // Стейт данные текущего пользователя\r\n    name: '',\r\n    about: '',\r\n    email: '',\r\n    avatar: avatarDefault\r\n  });\r\n  const [cards, setCards] = useState([]);                                                            // Стейт массив карточек\r\n  const [loggedIn, setLoggedIn] = useState(false);                                                   // Стейт-переменная статус пользователя, вход в систему\r\n  const [infoTooltip, setInfoTooltip] = useState({                                                   // Стейт информационного попапа статуса\r\n    isOpen: false,\r\n    image: statusSuccessImage,\r\n    message: statusSuccessMessage\r\n  });\r\n  const [isNavOpened, setIsNavOpened] = useState(false);                                             // Стейт мобильная навигация открыта\r\n  const [userEmail, setUserEmail] = useState('');                                                    // Стейт email пользователя\r\n\r\n  // Обработчик клика по аватару\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке редактирования профиля\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке добавить карточку\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  // Обработчик клика по кнопке удалить карточку\r\n  function handleCardDelete(card) {\r\n    setIsConfirmationPopupOpen(true);\r\n    setDeletedCard(card);\r\n  }\r\n\r\n  // Функция закрытия всех попапов\r\n  function closeAllPopups() {\r\n    setInfoTooltip({\r\n      ...infoTooltip,\r\n      isOpen: false\r\n    });\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsConfirmationPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  // Обработчик клика по картинке карточки\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleUpdateUser(userInfo) {\r\n    api.editProfile(userInfo)\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleUpdateAvatar({ avatar }) {\r\n    api.updateAvatar(avatar)\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then(newCard => {\r\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleCardDeleteSubmit(cardId) {\r\n    api.deleteCard(cardId)\r\n      .then(() => {\r\n        const newCards = cards.filter(c => c._id !== cardId);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function handleAddPlaceSubmit(cardInfo) {\r\n    api.addCard(cardInfo)\r\n      .then(newCard => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Обработчик по кнопке Войти\r\n  function handleLogin(email) {\r\n    setLoggedIn(true);\r\n    setUserEmail(email);\r\n  }\r\n\r\n  // Обработчик по кнопке Зарегистрироваться\r\n  function handleRegister() {\r\n    setInfoTooltip({\r\n      ...infoTooltip,\r\n      isOpen: true,\r\n      image: statusSuccessImage,\r\n      message: statusSuccessMessage\r\n    });\r\n  }\r\n\r\n  // Обработчик ошибки по кнопке Войти\r\n  function handleError(form, statusError) {\r\n    const errors = statusErrors.filter(error => error.name === form.name)[0].errors;\r\n    const statusErrorMessage = errors.filter(error => error.status === statusError)[0].message;\r\n    setInfoTooltip({\r\n      ...infoTooltip,\r\n      isOpen: true,\r\n      image: statusErrorImage,\r\n      message: statusErrorMessage\r\n    });\r\n  }\r\n\r\n  // Обработчик клика по меню\r\n  function handleNavClick() {\r\n    setIsNavOpened(!isNavOpened);\r\n  }\r\n\r\n  // Выход из аккаунта\r\n  function signOut() {\r\n    setLoggedIn(false);\r\n    setIsNavOpened(false);\r\n    localStorage.removeItem('token');\r\n    history.push('./sign-in');\r\n  }\r\n\r\n  // Проверка токена при повторном посещении сайта\r\n  function tokenCheck() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      auth.getContent(token)\r\n        .then(res => {\r\n          if (res) {\r\n            setUserEmail(res.data.email);\r\n            setLoggedIn(true);\r\n            history.push('/');\r\n          }\r\n        })\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  // Загрузка карточек по умолчанию\r\n  useEffect(() => {\r\n    api.getInitialCards()\r\n      .then(initialCards => {\r\n        setCards(initialCards);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  // Добавить/удалить слушателя нажатия Esc при открытии попапа\r\n  useEffect(() => {\r\n    function handleEscClose(evt) {\r\n      if (evt.key === 'Escape') {\r\n        closeAllPopups();\r\n      };\r\n    }\r\n\r\n    (isEditProfilePopupOpen\r\n      || infoTooltip.isOpen\r\n      || isAddPlacePopupOpen\r\n      || isEditAvatarPopupOpen\r\n      || isConfirmationPopupOpen\r\n      || selectedCard) && document.addEventListener('keydown', handleEscClose);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [infoTooltip.isOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isConfirmationPopupOpen, selectedCard, closeAllPopups]);\r\n\r\n  // Загрузка данных пользователя\r\n  useEffect(() => {\r\n    api.getUserInfo()\r\n      .then(data => {\r\n        setCurrentUser({ ...data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ loggedIn, userEmail, handleLogin, signOut }}>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"page__container\">\r\n          <Header\r\n            isNavOpened={isNavOpened}\r\n            onClickNav={handleNavClick}\r\n          />\r\n          <Switch>\r\n            <Route path=\"/sign-up\">\r\n              <Register\r\n                handleRegister={handleRegister}\r\n                handleError={handleError}\r\n              />\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              <Login\r\n                handleLogin={handleLogin}\r\n                handleError={handleError}\r\n              />\r\n            </Route>\r\n            <ProtectedRoute\r\n              exact path=\"/\"\r\n              component={Main}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n              cards={cards}\r\n            >\r\n            </ProtectedRoute>\r\n            <Route path=\"/\">\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n          </Switch>\r\n          {loggedIn && <Footer />}\r\n          {/* <!-- Попап редактировать профиль --> */}\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n          {/* <!-- Попап добавить карточку --> */}\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit}\r\n          />\r\n          {/* <!-- Попап картинка --> */}\r\n          <ImagePopup\r\n            onClose={closeAllPopups}\r\n            card={selectedCard}\r\n          />\r\n          {/* <!-- Попап удаления карточки --> */}\r\n          <ConfirmationPopup\r\n            isOpen={isConfirmationPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onCardDelete={handleCardDeleteSubmit}\r\n            card={deletedCard}\r\n          />\r\n\r\n          {/* <!-- Попап обновить аватар --> */}\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n\r\n          {/* <!-- Попап статус подтверждение --> */}\r\n          <InfoTooltip\r\n            isOpen={infoTooltip.isOpen}\r\n            onClose={closeAllPopups}\r\n            statusImage={infoTooltip.image}\r\n            statusMessage={infoTooltip.message}\r\n          />\r\n        </div>\r\n      </CurrentUserContext.Provider>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}